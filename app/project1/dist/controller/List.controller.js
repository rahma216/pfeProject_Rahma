sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/f/library","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,t,n,o,i){"use strict";return e.extend("app.project1.controller.List",{onInit:function(){this._oTable=this.byId("table0")},_validateInputs:function(e){var t=this.getView().getModel("mainModel");var n=[];e.forEach(e=>{var o=e.getId().includes("ID")?"ID":"name";var i=e.getValue();var a=new Promise((n,a)=>{if(!i){e.setValueState("Error");e.setValueStateText("Ce champ est obligatoire et ne peut pas être vide.");n(true);return}var r=t.bindList("/Entity",undefined,undefined,[new sap.ui.model.Filter(o,sap.ui.model.FilterOperator.EQ,i)]);r.requestContexts().then(function(t){if(t&&t.length>0){e.setValueState("Error");e.setValueStateText("La valeur '"+i+"' pour '"+o+"' existe déjà.");n(true)}else{e.setValueState("None");n(false)}}).catch(function(t){e.setValueState("Error");e.setValueStateText("Erreur lors de la vérification de la valeur.");n(true)})});n.push(a)});return Promise.all(n)},onCreate:function(){var e=this.getView(),n=[e.byId("EntityID"),e.byId("EntityNamee")];var o=this.getOwnerComponent().getModel("detailModel");this._validateInputs(n).then(e=>{var i=e.some(e=>e===true);if(!i){const e=this._oTable;const i=e.getBinding("items");i.create({ID:this.byId("EntityID").getValue(),name:this.byId("EntityNamee").getValue()});n.forEach(e=>{e.setValue("")});var a=this.getOwnerComponent().getModel("mainModel");var r=a.sServiceUrl+"/Entity";fetch(r).then(e=>{if(!e.ok){throw new Error("Network response was not ok")}return e.json()}).then(e=>{o.setData(e.value);console.log("patronnnnnnnnnnnnnnnnnnnnnnnnnnns",o.getData())}).catch(e=>{console.error("Error fetching data:",e)});t.show("The input is validated. Your Entity has been Created.")}else{MessageBox.alert("A validation error has occurred.Check your Id and your EntityName")}}).catch(e=>{MessageBox.alert("An error occurred during the validation process.")})},onOpenAddDialog:function(){this.getView().byId("OpenDialog").open()},onCancelDialog:function(e){e.getSource().getParent().close()},onEditMode:function(){this.byId("editModeButton").setVisible(false);this.byId("saveButton").setVisible(true);this.byId("deleteButton").setVisible(true)},onDelete:function(){var e=this.byId("table0").getSelectedItem();if(e){var n=e.getBindingContext("mainModel").getObject().soNumber;e.getBindingContext("mainModel").delete("$auto").then(function(){t.show(n+" SuccessFully Deleted")}.bind(this),function(e){t.show("Deletion Error: ",e)})}else{t.show("Please Select a Row to Delete")}},onFetchAssociations:function(){var e=this.getView().getModel("mainModel");var t=e.sServiceUrl+"/Association";var n=e.sServiceUrl+"/Entity";fetch(t).then(e=>{if(!e.ok){throw new Error("Network response was not ok")}return e.json()}).then(e=>{var t=this.getOwnerComponent().getModel("associationModel");t.setData(e)}).catch(e=>{console.error("Failed to fetch associations:",e)});fetch(n).then(e=>{if(!e.ok){throw new Error("Network response was not ok")}return e.json()}).then(e=>{var t=this.getOwnerComponent().getModel("serviceModel");t.setData(e)}).catch(e=>{console.error("Failed to fetch associations:",e)})},onListItemPress:function(e){var t=e.getSource();var n=t.getBindingContext("mainModel");var o=n.getObject();var i=this.getOwnerComponent().getModel("detailModel");i.setData(o);this.onFetchAssociations();this.getOwnerComponent().getRouter().navTo("Details",{index:o.ID});var a=this.getOwnerComponent().getModel("localModel");a.setProperty("/layout","TwoColumnsMidExpanded")},filterEntityById:function(e){let t=this.getView().getModel();let n=new sap.ui.model.Filter("ID",sap.ui.model.FilterOperator.EQ,e);t.bindList("{mainModel>/Entity}",undefined,undefined,[n]).requestContexts().then(function(e){e.forEach(e=>{console.log(e.getObject())})})},onSearch:function(e){var t=[];var n=e.getSource().getValue();if(n&&n.length>0){var a=new o("name",i.Contains,n);t.push(a)}var r=this.byId("table0");var s=r.getBinding("items");s.filter(t,"Application")},onUpdate:function(){var e=this.getView().byId("table0").getSelectedItem();if(e){var n=e.getBindingContext("mainModel");if(n){var o=this.getView().byId("EntityName").getValue();n.setProperty("name",o);var i=this.getView().getModel("mainModel");i.submitBatch("yourGroupId").then(function(){t.show("Update successful")}).catch(function(e){t.show("Update failed: "+e.message)})}else{t.show("Invalid Entity Name")}}else{t.show("Please select a row to update")}}})});